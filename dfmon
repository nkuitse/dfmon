#!/bin/zsh -e

typeset host=$(hostname -s); host=$host:l
typeset var=/var/local/dfmon/$host
typeset timestamp=$(print -P '%D{%Y%m%dT%H%M%S}')
typeset all=false last=false reset=false verbose=false
typeset -a action thresholds
typeset trend opt t
integer err=0

main() {
    typeset -a action
    action=( check )
    while getopts :alrvVp:i: opt; do
        case $opt in
            (a) all=true ;;
            (r) reset=true ;;
            (v) verbose=true ;;
            (l) action=( list ) ;;
            (V) action=( show-version ) ;;
            (p) action=( set-percent-threshold $OPTARG ) ;;
            (i) action=( set-increase-threshold $OPTARG ) ;;
            (*) usage ;;
        esac
    done
    shift $(( OPTIND - 1 ))
    set -- $action $@
    typeset func=$1; shift
    $func $@
}

check() {
    typeset used mount
    df-summary | while read -r used mount; do
        mkdir -p $var$mount
        cd $var$mount 
        [[ ! -e dfmon.conf/skip ]] || continue
        cur=${used[1,-2]}
        if [[ ! -e dfmon.log ]]; then
            ! $verbose || print "$host: disk usage on $mount is now being monitored: currently $used used" >&2
            $last || print $timestamp $cur >> dfmon.log
            continue
        fi
        prev=$(tail -n1 < dfmon.log | awk '{ print $2 }')
        print $timestamp $cur >> dfmon.log
        if $reset; then
            ! $verbose || print "$host: resetting baseline on $mount" >&2
        elif [[ -z $prev ]]; then
            ! $verbose || print "$host: setting baseline on $mount" >&2
        else
            thresholds=()
            [[ ! -e dfmon.conf/threshold.percent  ]] || thresholds+=$(cat dfmon.conf/threshold.percent)
            [[ ! -e dfmon.conf/threshold.increase ]] || thresholds+=$(( prev + $(cat dfmon.conf/threshold.increase) ))
            (( $#thresholds > 0 )) || thresholds+=$(( prev + 1 ))
            for t in ${(on)thresholds}; do
                if (( cur > t )); then
                    print "$host: disk usage on $mount exceeds $t% threshold (was $prev% now $cur% used)"
                    err=2
                    break
                fi
            done
        fi
    done
    exit $err
}

list() {
    if $verbose; then
        print -- '%Used     Thresholds                              '
        print -- 'Prev Cur  Incr Pct   Mount point                  '
        print -- '---- ---  ---- ---   -----------------------------'
    else
        print '+/- %Now %Prv Mount point' >&2
    fi
    df-summary | while read -r used mount; do
        cd $var$mount || continue
        [[ ! -e dfmon.conf/skip ]] || continue
        prev=$( [[ ! -e dfmon.log ]] || tail -n1 < dfmon.log | awk '{ print $2 }' )
        cur=${used[1,-2]}
        if $verbose; then
            integer pct=100 inc=2
            [[ ! -e dfmon.conf/threshold.percent ]]  || pct=$(cat dfmon.conf/threshold.percent)
            [[ ! -e dfmon.conf/threshold.increase ]] || inc=$(cat dfmon.conf/threshold.increase)
            printf '%4d %3d  %4.3s %3d   %s\n' $prev $cur $inc $pct $mount
        else
            if (( cur > prev )); then
                trend='+'$( printf '%2d' $(( cur - prev )) )
            elif (( prev > cur )); then
                trend='-'$( printf '%2d' $(( prev - cur )) )
            fi
            printf '%-3.3s %4d %4d %s\n' "$trend" $cur $prev $mount >&2
        fi
    done
}

df-summary() {
    if $all; then
        df -lP | awk '/ \// { print $5, $6 }'
    else
        df -lP | awk '/^\// { print $5, $6 }' 
    fi
}

usage() {
    print 'usage: dfmon [-a] [-r] [-v] [-l] [-V] [-p PCT] [-i PCT] [MOUNTPOINT]' >&2
    for msg in $@; do
        print "$msg"
    done >&2
    exit 1
}

show-version() {
    cat <<EOS
dfmon __VERSION__ by __AUTHOR__
__COPYRIGHT__
Licensed under the terms of the GNU General Public License, version 2.
See LICENSE for details.
EOS
}

set-percent-threshold() {
    integer p=$1
    typeset m=$2
    (( p >= 0 && p <= 100 )) || usage 'Percent must be between 0 and 100'
    [[ -n $m ]] || usage 'You must specify a mount point'
    mkdir -p $var$m/dfmon.conf
    print $p > $var$m/dfmon.conf/threshold.percent
}

set-increase-threshold() {
    integer i=$1
    typeset m=$2
    (( i >= 1 && i <= 100 )) || usage 'Increase must be between 1 and 100'
    [[ -n $m ]] || usage 'You must specify a mount point'
    mkdir -p $var$m/dfmon.conf
    print $i > $var$m/dfmon.conf/threshold.increase
}

main "$@"
